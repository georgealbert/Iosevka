###### Combining symbols
$$include '../meta/macros.ptl'

import [mix clamp fallback] from "@iosevka/util"
import [Box] from "@iosevka/geometry/box"
import [Joining NeqLigationSlashDotted] from "@iosevka/glyph/relation"
import [DesignParameters] from "../meta/aesthetics.mjs"

glyph-module

glyph-block Symbols-Combining-Cyrillic-Numeric : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Mark-Shared-Metrics : markExtend MarkStroke markDotsRadius


	define CenterX 0
	define CenterY : CAP / 2
	define RingRadius : 0.5 * CAP - Descender
	define SmallMarkSize : 0.75 * markExtend
	define Sw : AdviceStroke 7

	define [CyrillicStdRingShape fn] : glyph-proc
		set-width 0
		set-mark-anchor 'slash' CenterX CenterY CenterX CenterY
		foreach i [range 0 12] : begin
			define angle : i / 12 * 360
			include : new-glyph : fn CenterX CenterY RingRadius angle

	create-glyph "cyrl/tenThousands" 0x488
		CyrillicStdRingShape : function [cx cy r angle] : glyph-proc
			define mcx : cx + r * [archv.sCos angle]
			define mcy : cy + r * [archv.sSin angle] - 0.5 * SmallMarkSize

			include : dispiro
				widths.center Sw
				g2.up.start (mcx + SmallMarkSize) mcy [heading Upward]
				g2.left.mid mcx (mcy + SmallMarkSize) [heading Leftward]
				g2.down.end (mcx - SmallMarkSize) mcy [heading Downward]

	foreach { suffix { DrawAt kDotRadius overshoot } } [Object.entries DotVariants] : do
		create-glyph "cyrl/millions.\(suffix)"
			CyrillicStdRingShape : function [cx cy r angle] : glyph-proc
				define mcx : cx + r * [archv.sCos angle]
				define mcy : cy + r * [archv.sSin angle]

				include [refer-glyph "commaAboveZero.\(suffix)"]
				include : Ungizmo
				include : Scale 0.75
				include : Rotate ((angle + 90) / 180 * Math.PI)
				include : Regizmo
				include : ApparentTranslate mcx mcy

	select-variant 'cyrl/millions' 0x489 (follow -- 'punctuationDot')

	create-glyph "cyrl/tenMillions" 0xA670
		CyrillicStdRingShape : function [cx cy r angle] : glyph-proc
			define mcx : cx + r * [archv.sCos angle]
			define mcy : cy + r * [archv.sSin angle]
			define s SmallMarkSize

			include : ExtLineCenter 0 Sw (mcx - s) (mcy - s) (mcx + s) (mcy + s)
			include : ExtLineCenter 0 Sw (mcx + s) (mcy - s) (mcx - s) (mcy + s)

	create-glyph "cyrl/hundredMillions" 0xA671 : glyph-proc
		set-width 0
		set-mark-anchor 'slash' CenterX CenterY CenterX CenterY

		local cx CenterX
		local cy CenterY
		local r RingRadius
		local cut : 0.625 * RingRadius

		include : union
			difference
				RingStrokeAt cx cy r Sw
				Rect (cy + cut) (cy - cut) (- VERY-FAR) (VERY-FAR)
			difference
				union
					HBar.b (cx - r) (cx + r) (cy + cut) Sw
					HBar.t (cx - r) (cx + r) (cy - cut) Sw
				RingAt cx cy (r - 0.5 * Sw)

	create-glyph "cyrl/billions" 0xA672 : glyph-proc
		set-width 0
		set-mark-anchor 'slash' CenterX CenterY CenterX CenterY

		local cx CenterX
		local cy CenterY
		local r RingRadius
		local s SmallMarkSize

		# Cross at top
		include : HBar.m (cx - s) (cx + s) (cy + r) Sw
		include : VBar.m cx (cy + r - s) (cy + r + s) Sw

		# Three mini vertical dashes at bottom
		include : VBar.m (cx - 0.5 * r) (cy - r - s) (cy - r + s) Sw
		include : VBar.m cx (cy - r - s) (cy - r + s) Sw
		include : VBar.m (cx + 0.5 * r) (cy - r - s) (cy - r + s) Sw

		# Three mini horizontal dashes at left
		include : HBar.m (cx - r - s) (cx - r + s) (cy + 0.5 * r) Sw
		include : HBar.m (cx - r - s) (cx - r + s) cy Sw
		include : HBar.m (cx - r - s) (cx - r + s) (cy - 0.5 * r) Sw

		# Three mini horizontal dashes at right
		include : HBar.m (cx + r - s) (cx + r + s) (cy + 0.5 * r) Sw
		include : HBar.m (cx + r - s) (cx + r + s) cy Sw
		include : HBar.m (cx + r - s) (cx + r + s) (cy - 0.5 * r) Sw

	create-glyph "combSymbol/enclosingCircle" 0x20DD : glyph-proc
		set-width 0
		set-mark-anchor 'slash' CenterX CenterY CenterX CenterY

		local cx CenterX
		local cy CenterY
		local r RingRadius
		local cut : 0.625 * RingRadius

		include : RingStrokeAt cx cy r Sw
